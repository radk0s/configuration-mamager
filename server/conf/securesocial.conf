

smtp {
  host=smtp.gmail.com
  #port=25
  ssl=true
  user="your_user"
  password=your_password
  from="your_from_address@domain"
}

securesocial {

  # TODO: customize to proper configuration-manager application settings
  #
  # Where to redirect the user if SecureSocial can't figure that out from
  # the request that was received before authenticating the user
  #
  #onLoginGoTo=/

  #
  # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
  #
  #onLogoutGoTo=/login

  #
  # Enable SSL
  #
  #ssl=false

  #
  # The controller class for assets. This is optional, only required
  # when you use a custom class for Assets.
  #
  #assetsController=controllers.ReverseMyCustomAssetsController

  cookie {
    #name=id
    #path=/
    #domain=some_domain
    #httpOnly=true
    #idleTimeoutInMinutes=30
    #absoluteTimeoutInMinutes=720
  }

  twitter {
    requestTokenUrl="https://twitter.com/oauth/request_token"
    accessTokenUrl="https://twitter.com/oauth/access_token"
    authorizationUrl="https://twitter.com/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  facebook {
    authorizationUrl="https://graph.facebook.com/oauth/authorize"
    accessTokenUrl="https://graph.facebook.com/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
    # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
    scope=email
  }

  google {
    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    clientId=your_client_id
    clientSecret=your_client_secret
    scope="profile email"
  }

  linkedin {
    requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
    accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
    authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  github {
    authorizationUrl="https://github.com/login/oauth/authorize"
    accessTokenUrl="https://github.com/login/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  foursquare {
    authorizationUrl="https://foursquare.com/oauth2/authenticate"
    accessTokenUrl="https://foursquare.com/oauth2/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  dropbox {
    authorizationUrl="https://www.dropbox.com/1/oauth2/authorize"
    accessTokenUrl="https://api.dropbox.com/1/oauth2/token"
    clientId=your_app_key
    clientSecret=your_app_secret
  }

  xing {
    requestTokenUrl="https://api.xing.com/v1/request_token"
    accessTokenUrl="https://api.xing.com/v1/access_token"
    authorizationUrl="https://api.xing.com/v1/authorize"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  instagram {
    authorizationUrl="https://api.instagram.com/oauth/authorize"
    accessTokenUrl="https://api.instagram.com/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  vk {
    authorizationUrl="http://oauth.vk.com/authorize"
    accessTokenUrl="https://oauth.vk.com/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  weibo {
    authorizationUrl="https://api.weibo.com/oauth2/authorize"
    accessTokenUrl="https://api.weibo.com/oauth2/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
  }

  concur {
    authorizationUrl="https://www.concursolutions.com/net2/oauth2/Login.aspx"
    accessTokenUrl="https://www.concursolutions.com/net2/oauth2/GetAccessToken.ashx"
    clientId=your_client_id
    clientSecret=your_client_secret
    scope="USER"
  }

  soundcloud {
    authorizationUrl="https://soundcloud.com/connect"
    accessTokenUrl="https://api.soundcloud.com/oauth2/token"
    clientId=your_client_id
    clientSecret=your_client_secret
    scope="non-expiring"
  }

  userpass {
    #
    # Enable username support, otherwise SecureSocial will use the emails as user names
    #
    withUserNameSupport=false
    sendWelcomeEmail=true
    enableGravatarSupport=true
    tokenDuration=60
    tokenDeleteInterval=5
    signupSkipLogin=false
  }

}